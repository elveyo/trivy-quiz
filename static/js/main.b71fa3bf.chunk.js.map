{"version":3,"sources":["components/Select.js","styledComponents/Form.styled.js","fetchOptions.js","components/Form.js","styledComponents/GlobalStyle.js","components/Loading.js","components/Button.js","styledComponents/Quiz.styled.js","components/Answers.js","styledComponents/TimeLeft.js","components/Quiz.js","styledComponents/Final.styled.js","components/Finish.js","App.js","reportWebVitals.js","index.js"],"names":["SelectTag","className","options","selectType","useState","item","selectItem","name","onChange","value","StyledForm","styled","form","Heading","h1","UserInput","input","StyledSelect","Select","Button","button","QMarks","div","categoryOptions","label","difficultyOptions","categories","history","geography","animals","sport","general","nature","Form","setForm","setName","setDifficulty","setCategory","setLoading","onSubmit","e","preventDefault","target","category","difficulty","htmlFor","type","id","required","GlobalStyle","createGlobalStyle","rotate","keyframes","QuizBody","Animation","FaQuestion","LoadingAnimation","Loading","setData","setIsQuiz","fetchData","a","fetch","response","json","useEffect","data","results","sort","Math","random","text","func","onClick","dangerouslySetInnerHTML","__html","Question","AnswersDiv","StyledButton","props","textSize","NextButton","disabled","blink","CorrectButton","IncorrectButton","Answers","sortedAnswers","correct_answer","setIsDisabled","setIsCorrect","isCorrect","setScore","setLineStatus","answers","setAnswers","animationEnd","wrongAnswer","setWrongAnswer","console","log","map","answer","length","prev","shrink","Line","status","Quiz","setIsFinished","questionNum","setQuestionNum","isDisabled","undefined","lineStatus","setAnimationEnd","currentQuestion","incorrect_answers","timer","setTimeout","clearTimeout","question","iconsStyle","css","FunSmile","FaRegGrinTears","Peace","FaRegHandPeace","LoveSmile","FaRegGrinHearts","FinalMessage","RestartButton","Finish","score","questionStyle","fontSize","color","App","isLoading","isFinished","isQuiz","isForm","fetchOptions","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b71fa3bf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Select from 'react-select'\r\n\r\nfunction SelectTag({ className, options, selectType }) {\r\n  const [item, selectItem] = useState(null)\r\n  const handleChange = item => {\r\n    selectItem(item)\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      name={selectType}\r\n      className={className}\r\n      onChange={handleChange}\r\n      value={item}\r\n      options={options}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SelectTag\r\n","import styled from 'styled-components'\r\nimport Select from '../components/Select'\r\n\r\nexport const StyledForm = styled.form`\r\n  width: 80%;\r\n  height: 80%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  label {\r\n    margin: 10px auto;\r\n    width: auto;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    border-bottom: 2px solid #ff0099;\r\n    letter-spacing: 2px;\r\n    padding-bottom: 5px;\r\n  }\r\n`\r\nexport const Heading = styled.h1`\r\n  text-align: center;\r\n  font-size: 45px;\r\n  margin-bottom: 25px;\r\n  letter-spacing: 4px;\r\n`\r\nexport const UserInput = styled.input`\r\n  border-radius: 10px;\r\n  padding: 4px 20px;\r\n  font-size: 19px;\r\n  font-weight: 700;\r\n  outline: none;\r\n  border: none;\r\n  border: 1px solid #493240;\r\n  text-align: center;\r\n  letter-spacing: 3px;\r\n  z-index: 100000;\r\n  &:focus {\r\n    border: 1px solid #ff0099;\r\n    box-shadow: 1px 1px 2px #ff0099;\r\n  }\r\n`\r\nexport const StyledSelect = styled(Select)`\r\n  border-radius: 50px;\r\n  border: 1px solid #493240;\r\n  font-size: 17px;\r\n  .css-26l3qy-menu {\r\n    border-radius: 10px !important;\r\n    color: black;\r\n    background: linear-gradient(to right, #ffffff, #abbaab);\r\n    opacity: 0.9;\r\n    z-index: 1000;\r\n  }\r\n  .css-yk16xz-control {\r\n    border: none;\r\n    border-radius: 50px;\r\n  }\r\n`\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  width: 50%;\r\n  margin: 30px auto;\r\n  padding: 10px 20px;\r\n  background: linear-gradient(to right, #ff0099, #493240);\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #fff;\r\n  border-radius: 50px;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  z-index: 100;\r\n`\r\nexport const QMarks = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  z-index: 1000;\r\n  display: flex;\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color: transparent;\r\n  padding: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n","export const categoryOptions = [\r\n  { value: 'general', label: 'Genera Knowledge' },\r\n  { value: 'history', label: 'History' },\r\n  { value: 'geography', label: 'Geography' },\r\n  { value: 'animals', label: 'Animals' },\r\n  { value: 'sport', label: 'Sport' },\r\n  { value: 'nature', label: 'Nature' },\r\n  { value: 'computer-science', label: 'Computer Science' }\r\n]\r\nexport const difficultyOptions = [\r\n  { value: 'easy', label: 'Easy' },\r\n  { value: 'medium', label: 'Medium' },\r\n  { value: 'hard', label: 'Hard' }\r\n]\r\n\r\n//api purpose\r\nexport const categories = {\r\n  'general-knowledge': 9,\r\n  history: 23,\r\n  geography: 22,\r\n  animals: 27,\r\n  sport: 21,\r\n  'computer-science': 18,\r\n  general: 9,\r\n  nature: 17\r\n}\r\n","import React from 'react'\r\nimport {\r\n  StyledForm,\r\n  Heading,\r\n  UserInput,\r\n  Button,\r\n  StyledSelect\r\n} from '../styledComponents/Form.styled'\r\nimport { categoryOptions, difficultyOptions } from '../fetchOptions'\r\n\r\nfunction Form({ setForm, setName, setDifficulty, setCategory, setLoading }) {\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    const { name, category, difficulty } = e.target\r\n    setName(name.value)\r\n    setCategory(category.value)\r\n    setDifficulty(difficulty.value)\r\n    setForm(false)\r\n    setLoading(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledForm onSubmit={handleSubmit}>\r\n        <Heading>Trivia Quiz</Heading>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <UserInput type=\"text\" id=\"name\" name=\"username\" required></UserInput>\r\n        <label>Category</label>\r\n        <StyledSelect options={categoryOptions} selectType=\"category\" />\r\n        <label>Difficulty</label>\r\n        <StyledSelect options={difficultyOptions} selectType=\"difficulty\" />\r\n        <Button>Start</Button>\r\n      </StyledForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import styled, { createGlobalStyle, keyframes } from 'styled-components'\r\nimport { FaQuestion } from 'react-icons/fa'\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n*,\r\n*:after,\r\n*::before {\r\n   margin:0;\r\n  padding:0;\r\n  box-sizing: border-box;\r\n  font-family: 'Noto Sans JP', sans-serif;\r\n}\r\n#root{\r\n  height:100vh;\r\n  width:100%;\r\n  display:flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: linear-gradient(to bottom, #24243e, #302b63, #0f0c29); \r\n}\r\n`\r\nexport const rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\nexport const QuizBody = styled.div`\r\n  width: 60%;\r\n  min-height: 88%;\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #fff;\r\n  border-radius: 25px;\r\n  box-shadow: 2px 3px 10px #ff0099;\r\n  position: relative;\r\n  background: linear-gradient(to right, #ffffff, #abbaab);\r\n  flex-direction: column;\r\n  @media only screen and (max-width: 750px) {\r\n    width: 90%;\r\n  }\r\n`\r\nexport const Animation = styled(FaQuestion)`\r\n  position: absolute;\r\n  color: purple;\r\n  font-size: 350px;\r\n  animation: ${rotate} 10s linear infinite;\r\n  opacity: 0.1;\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 220px;\r\n  }\r\n`\r\nexport const LoadingAnimation = styled(Animation)`\r\n  font-size: 50px;\r\n  position: relative;\r\n  animation: ${rotate} 1s linear infinite;\r\n  opacity: 1;\r\n  color: black;\r\n`\r\n","import React, { useEffect } from 'react'\r\nimport { LoadingAnimation } from '../styledComponents/GlobalStyle'\r\nimport { categories } from '../fetchOptions'\r\nfunction Loading({ setLoading, setData, difficulty, category, setIsQuiz }) {\r\n  if (!category) category = 'general-knowledge'\r\n  const fetchData = async () => {\r\n    const response = await fetch(\r\n      `https://opentdb.com/api.php?amount=10&category=${categories[category]}&difficulty=${difficulty}`\r\n    )\r\n    return response.json()\r\n  }\r\n  useEffect(async () => {\r\n    let data = await fetchData()\r\n    data = [...data.results].sort(() => Math.random() - 0.5)\r\n    setData(data)\r\n    setLoading(false)\r\n    setIsQuiz(true)\r\n  }, [])\r\n  return <LoadingAnimation />\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\n\r\nfunction Button({ className, text, func }) {\r\n  return (\r\n    <button className={className} onClick={func}>\r\n      <div\r\n        dangerouslySetInnerHTML={{\r\n          __html: `${text}`\r\n        }}\r\n      ></div>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import styled, { keyframes } from 'styled-components'\r\nimport Button from '../components/Button'\r\nimport { FcNext } from 'react-icons/fc'\r\nexport const Question = styled.div`\r\n  width: 80%;\r\n  height: 190px;\r\n  background-color: white;\r\n  opacity: 0.8;\r\n  z-index: 10000;\r\n  position: relative;\r\n  border: 1px solid grey;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: white;\r\n    transform: rotate(2deg);\r\n    border: 1px solid grey;\r\n    z-index: -1;\r\n  }\r\n  div {\r\n    width: 90%;\r\n    word-wrap: break-word;\r\n    letter-spacing: 1px;\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    width: 100%;\r\n    height: 130px;\r\n  }\r\n`\r\nexport const AnswersDiv = styled.div`\r\n  margin-top: 25px;\r\n  width: 80%;\r\n  display: flex;\r\n  background-color: transparent;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10000;\r\n`\r\nexport const StyledButton = styled(Button)`\r\n  display: block;\r\n  width: 44%;\r\n  height: 85px;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  z-index: 10000;\r\n  font-size: ${props => (props.textSize < 25 ? '18px' : '15px')};\r\n  letter-spacing: ${props => (props.textSize < 25 ? '1px' : '0')};\r\n  word-wrap: break-word;\r\n  position: relative;\r\n  border: 1px solid #302b63;\r\n  cursor: pointer;\r\n  transition: 0.2s ease;\r\n  border-radius: 5px;\r\n  opacity: 0.8;\r\n  background:white\r\n  font-weight: 900;\r\n  color: black;\r\n  div{\r\n    width:100%;\r\n    height:100%;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  :hover {\r\n    color: black;\r\n    border: 1px solid black;\r\n    font-weight: 700;\r\n  }\r\n  \r\n  @media only screen and (max-width: 600px) {\r\n    width:100%;\r\n    margin-top:5px;\r\n    height:55px;\r\n    font-size: ${props => (props.textSize < 15 ? '18px' : '14px')};\r\n  }\r\n`\r\nexport const NextButton = styled(StyledButton)`\r\n  width: 30%;\r\n  letter-spacing: 3px;\r\n  height: 40px;\r\n  margin-top: 35px;\r\n  padding: 10px 15px;\r\n  border: 1px solid #302b63;\r\n  background: transparent;\r\n  transition: 0.2s ease-in-out;\r\n  opacity: 0.9;\r\n  color: black;\r\n  font-size: 19px;\r\n\r\n  :hover {\r\n    color: purple;\r\n    font-weight: 600;\r\n  }\r\n  pointer-events: ${props => props.disabled};\r\n  @media only screen and (max-width: 600px) {\r\n    width: 50%;\r\n  }\r\n`\r\n//animation for corect button\r\nexport const blink = keyframes`\r\n  40% {\r\n    transform:scale(0.9)\r\n    \r\n  }\r\n\r\n  80% {\r\n    transform: scale(1.1)\r\n    \r\n  }\r\n  \r\n`\r\nexport const CorrectButton = styled(StyledButton)`\r\n  color: white;\r\n  background: linear-gradient(to top, #4776e6, #8e54e9);\r\n  animation: ${blink} 1s linear infinite;\r\n  border: 1px solid white;\r\n  pointer-events: none;\r\n`\r\nexport const IncorrectButton = styled(StyledButton)`\r\n  pointer-events: none;\r\n  :after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 70%;\r\n    height: 4px;\r\n    background-color: black;\r\n    opacity: 0.7;\r\n    transform: translate(-50%, -50%) rotate(15deg);\r\n    transform-origin: center center;\r\n    @media only screen and (max-width: 600px) {\r\n      transform: translate(-50%, -50%) rotate(10deg);\r\n    }\r\n  }\r\n  :before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 70%;\r\n    height: 4px;\r\n    background-color: black;\r\n    transform: translate(-50%, -50%) rotate(-15deg);\r\n    transform-origin: center center;\r\n    opacity: 0.7;\r\n    @media only screen and (max-width: 600px) {\r\n      transform: translate(-50%, -50%) rotate(-10deg);\r\n    }\r\n  }\r\n`\r\n","import React, { useState } from 'react'\r\nimport {\r\n  AnswersDiv,\r\n  StyledButton,\r\n  CorrectButton,\r\n  NextButton,\r\n  IncorrectButton\r\n} from '../styledComponents/Quiz.styled'\r\n\r\nfunction Answers({\r\n  sortedAnswers,\r\n  correct_answer,\r\n  setIsDisabled,\r\n  setIsCorrect,\r\n  isCorrect,\r\n  setScore,\r\n  setLineStatus,\r\n  answers,\r\n  setAnswers,\r\n  animationEnd\r\n}) {\r\n  const [wrongAnswer, setWrongAnswer] = useState()\r\n  console.log(animationEnd)\r\n  if (isCorrect == true) {\r\n    setLineStatus('paused')\r\n    return (\r\n      <AnswersDiv>\r\n        {answers.map(answer => {\r\n          if (answer === correct_answer) {\r\n            return <CorrectButton text={answer} textSize={answer.length} />\r\n          } else return <StyledButton text={answer} textSize={answer.length} />\r\n        })}\r\n      </AnswersDiv>\r\n    )\r\n  }\r\n  if (isCorrect == false) {\r\n    setLineStatus('paused')\r\n    if (!animationEnd) {\r\n      return (\r\n        <AnswersDiv>\r\n          {answers.map(answer => {\r\n            if (answer === correct_answer) {\r\n              return <CorrectButton text={answer} textSize={answer.length} />\r\n            } else if (answer === wrongAnswer) {\r\n              return <IncorrectButton text={answer} textSize={answer.length} />\r\n            } else\r\n              return <StyledButton text={answer} textSize={answer.length} />\r\n          })}\r\n        </AnswersDiv>\r\n      )\r\n    }\r\n    return (\r\n      <AnswersDiv>\r\n        {answers.map(answer => {\r\n          if (answer === correct_answer) {\r\n            return <CorrectButton text={answer} textSize={answer.length} />\r\n          }\r\n          return <IncorrectButton text={answer} textSize={answer.length} />\r\n        })}\r\n      </AnswersDiv>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AnswersDiv>\r\n      {sortedAnswers.map(answer => (\r\n        <StyledButton\r\n          text={answer}\r\n          key={Math.random() * 100}\r\n          textSize={answer.length}\r\n          func={() => {\r\n            if (answer === correct_answer) {\r\n              setIsDisabled('auto')\r\n              setAnswers(sortedAnswers)\r\n              setScore(prev => prev + 1)\r\n              setIsCorrect(true)\r\n            } else {\r\n              setIsDisabled('auto')\r\n              setAnswers(sortedAnswers)\r\n              setWrongAnswer(answer)\r\n              setIsCorrect(false)\r\n            }\r\n          }}\r\n        />\r\n      ))}\r\n    </AnswersDiv>\r\n  )\r\n}\r\n\r\nexport default Answers\r\n","import styled,{keyframes} from 'styled-components'\r\nexport const shrink = keyframes`\r\n  from {\r\n   width:80%;\r\n  }\r\n\r\n  to {\r\n      background-color:red;\r\n    width:0%;\r\n  }\r\n`\r\nexport const Line = styled.div`\r\nmargin-top: 30px;\r\nmargin-left: 10%;\r\nwidth:80%;\r\nheight:3px;\r\nbackground-color: green;\r\nanimation: ${shrink} 15s linear ;\r\ndisplay:block;\r\nalign-self: flex-start;\r\nanimation-play-state:${props =>props.status};\r\n`","import React, { useState, useEffect } from 'react'\r\nimport Loading from '../components/Loading'\r\nimport { Question, NextButton } from '../styledComponents/Quiz.styled'\r\nimport Answers from './Answers'\r\nimport { Line } from '../styledComponents/TimeLeft'\r\nimport { FaChevronRight } from 'react-icons/fa'\r\n\r\nfunction Quiz({ data, setIsFinished, setScore, setIsQuiz }) {\r\n  const [questionNum, setQuestionNum] = useState(0)\r\n  //next button\r\n  const [isDisabled, setIsDisabled] = useState('none')\r\n  //see if answer is corrrect or not so different UI should be rendered\r\n  const [isCorrect, setIsCorrect] = useState(undefined)\r\n  const [lineStatus, setLineStatus] = useState('unset')\r\n  const [animationEnd, setAnimationEnd] = useState(false)\r\n  const currentQuestion = data[questionNum]\r\n  const { correct_answer, incorrect_answers } = currentQuestion\r\n  const sortedAnswers = [correct_answer, ...incorrect_answers].sort(\r\n    () => Math.random() - 0.5\r\n  )\r\n  const [answers, setAnswers] = useState()\r\n  //Animation\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setAnswers(sortedAnswers)\r\n      setAnimationEnd(true)\r\n      setIsCorrect(false)\r\n      setIsDisabled('auto')\r\n    }, 15000)\r\n    return () => clearTimeout(timer)\r\n  }, [questionNum])\r\n\r\n  return (\r\n    <>\r\n      <Question>\r\n        <div\r\n          dangerouslySetInnerHTML={{\r\n            __html: `${questionNum + 1}. ${currentQuestion.question}`\r\n          }}\r\n        ></div>\r\n      </Question>\r\n      <Line key={Math.random()} status={lineStatus} />\r\n      <h1></h1>\r\n      <Answers\r\n        sortedAnswers={sortedAnswers}\r\n        correct_answer={correct_answer}\r\n        setIsDisabled={setIsDisabled}\r\n        isCorrect={isCorrect}\r\n        setIsCorrect={setIsCorrect}\r\n        setScore={setScore}\r\n        setLineStatus={setLineStatus}\r\n        answers={answers}\r\n        setAnswers={setAnswers}\r\n        animationEnd={animationEnd}\r\n      />\r\n      {questionNum < 9 && (\r\n        <NextButton\r\n          text=\"Next\"\r\n          func={() => {\r\n            setQuestionNum(questionNum + 1)\r\n            setAnimationEnd(false)\r\n            setIsCorrect(undefined)\r\n            setIsDisabled('none')\r\n            setLineStatus('unset')\r\n          }}\r\n          disabled={isDisabled}\r\n        />\r\n      )}\r\n      {questionNum === 9 && (\r\n        <NextButton\r\n          text=\"Finish\"\r\n          func={() => {\r\n            setIsQuiz(false)\r\n            setIsFinished(true)\r\n          }}\r\n          disabled={isDisabled}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Quiz\r\n","import styled, { css, keyframes } from 'styled-components'\r\nimport Button from '../components/Button'\r\nimport { blink } from '../styledComponents/Quiz.styled'\r\nimport { FaRegGrinTears, FaRegGrinHearts, FaRegHandPeace } from 'react-icons/fa'\r\nconst shrink = keyframes`\r\n  from{\r\n      transform:scale(0.9)\r\n  }\r\n  to{\r\n      transform:scale(1);\r\n      background:black;\r\n      color:white\r\n  }\r\n`\r\nconst iconsStyle = css`\r\n  font-size: 100px;\r\n  margin: 25px auto 0 auto;\r\n  animation: ${blink} 1s linear infinite;\r\n`\r\nexport const FunSmile = styled(FaRegGrinTears)`\r\n  ${iconsStyle}\r\n`\r\nexport const Peace = styled(FaRegHandPeace)`\r\n  ${iconsStyle}\r\n`\r\nexport const LoveSmile = styled(FaRegGrinHearts)`\r\n  ${iconsStyle}\r\n`\r\n\r\nexport const FinalMessage = styled.div`\r\n  text-align: center;\r\n  h2 {\r\n    font-size: 28px;\r\n    letter-spacing: 2px;\r\n    font-size: bold;\r\n  }\r\n  h1 {\r\n    margin-top: 40px;\r\n    letter-spacing: 5px;\r\n  }\r\n`\r\nexport const RestartButton = styled(Button)`\r\n  display: block;\r\n  width: 55%;\r\n  padding: 10px 20px;\r\n  background: white;\r\n  border: 1px solid #302b63;\r\n  border-radius: 5px;\r\n  margin: 60px auto 0 auto;\r\n  font-size: 19px;\r\n  letter-spacing: 3px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  transition: 0.2s ease;\r\n  transform: scale(0.9);\r\n  :hover {\r\n    color: purple;\r\n    font-weight: 600;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport {\r\n  FinalMessage,\r\n  RestartButton,\r\n  FunSmile,\r\n  Peace,\r\n  LoveSmile\r\n} from '../styledComponents/Final.styled'\r\n\r\nfunction Finish({ name, score, setIsFinished, setForm, setScore }) {\r\n  return (\r\n    <div>\r\n      {/* bad score */}\r\n      {score > 0 && score <= 3 && (\r\n        <FinalMessage>\r\n          <h2>Not good {name}! Your parents wouldn't be proud I guess</h2>\r\n          <FunSmile />\r\n          <h1>{score}/10</h1>\r\n        </FinalMessage>\r\n      )}\r\n      {/* good score */}\r\n      {score >= 4 && score <= 7 && (\r\n        <FinalMessage>\r\n          <h2>Good job {name}. It can always be better!</h2>\r\n          <Peace />\r\n          <h1>{score}/10</h1>\r\n        </FinalMessage>\r\n      )}\r\n      {/* nice score */}\r\n      {score > 7 && (\r\n        <FinalMessage>\r\n          <h2>Yeah {name}, you cracked it!!</h2>\r\n          <LoveSmile />\r\n          <h1>{score}/10</h1>\r\n        </FinalMessage>\r\n      )}\r\n      <RestartButton\r\n        text=\"Restart\"\r\n        func={() => {\r\n          setScore(0)\r\n          setIsFinished(false)\r\n          setForm(true)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Finish\r\n","import Form from './components/Form'\r\nimport { FaQuestion } from 'react-icons/fa'\r\nimport { QMarks } from './styledComponents/Form.styled'\r\nimport react, { useState } from 'react'\r\nimport {\r\n  GlobalStyle,\r\n  QuizBody,\r\n  Animation\r\n} from './styledComponents/GlobalStyle'\r\nimport Quiz from './components/Quiz'\r\nimport Loading from './components/Loading'\r\nimport Finish from './components/Finish'\r\n\r\nconst questionStyle = {\r\n  fontSize: '40px',\r\n  color: '#302b63'\r\n}\r\n\r\nfunction App() {\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [isFinished, setIsFinished] = useState(false)\r\n  const [isQuiz, setIsQuiz] = useState(false)\r\n  const [name, setName] = useState('')\r\n  const [category, setCategory] = useState()\r\n  const [difficulty, setDifficulty] = useState()\r\n  const [isForm, setForm] = useState(true)\r\n  const [data, setData] = useState([])\r\n  const [score, setScore] = useState(0)\r\n  const fetchOptions = {\r\n    name,\r\n    category,\r\n    difficulty\r\n  }\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <GlobalStyle />\r\n        <QuizBody>\r\n          <Loading\r\n            setLoading={setLoading}\r\n            setData={setData}\r\n            setIsQuiz={setIsQuiz}\r\n            {...fetchOptions}\r\n          />\r\n        </QuizBody>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <QuizBody>\r\n        {/* {isLoading && (\r\n          <Loading\r\n            setLoading={setLoading}\r\n            setData={setData}\r\n            {...fetchOptions}\r\n          />\r\n        )} */}\r\n\r\n        <Animation />\r\n        {isFinished && (\r\n          <Finish\r\n            name={name}\r\n            score={score}\r\n            setScore={setScore}\r\n            setIsFinished={setIsFinished}\r\n            setForm={setForm}\r\n          />\r\n        )}\r\n        {isForm && (\r\n          <>\r\n            <QMarks>\r\n              <FaQuestion style={questionStyle} />\r\n              <FaQuestion style={questionStyle} />\r\n            </QMarks>\r\n            <Form\r\n              setLoading={setLoading}\r\n              setForm={setForm}\r\n              setName={setName}\r\n              setCategory={setCategory}\r\n              setDifficulty={setDifficulty}\r\n            />\r\n          </>\r\n        )}\r\n        {isQuiz && (\r\n          <Quiz\r\n            data={data}\r\n            setIsFinished={setIsFinished}\r\n            setIsQuiz={setIsQuiz}\r\n            setScore={setScore}\r\n          />\r\n        )}\r\n      </QuizBody>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}